defmodule PodJs do
  defmacro __using__(_opts) do
    quote do
      @behaviour Phoenix.Template.Engine

      @impl Phoenix.Template.Engine
      def compile(path) do
        path
        |> File.read!()
        |> precompile(path)
        |> EEx.compile_string(engine: Phoenix.HTML.Engine, file: path, line: 1)
      end

      def precompile(source, path, check_fn \\ &File.exists?/1) do
        [__MODULE__.page_script_path/1, __MODULE__.every_script_path/1]
        |> Stream.map(& &1.(path))
        |> Stream.filter(check_fn)
        |> Stream.map(&__MODULE__.to_entry_point/1)
        |> Enum.map_join("\n", &__MODULE__.script_tag/1)
        |> case do
          "" ->
            source
          included_scripts ->
            """
            #{source}
            <!-- Generated by pod_js -->
            #{included_scripts}
            """
        end
      end
    end
  end
end
